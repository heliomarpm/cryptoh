import{_ as s,c as i,o as e,ae as t}from"./chunks/framework.BeJRua5E.js";const c=JSON.parse('{"title":"Enumeration: HashAlgorithm","description":"","frontmatter":{},"headers":[],"relativePath":"app/enumerations/HashAlgorithm.md","filePath":"app/enumerations/HashAlgorithm.md","lastUpdated":null}'),h={name:"app/enumerations/HashAlgorithm.md"};function n(l,a,r,o,p,d){return e(),i("div",null,a[0]||(a[0]=[t('<h1 id="enumeration-hashalgorithm" tabindex="-1">Enumeration: HashAlgorithm <a class="header-anchor" href="#enumeration-hashalgorithm" aria-label="Permalink to &quot;Enumeration: HashAlgorithm&quot;">​</a></h1><p>Enum representing different hash algorithms. Currently supports SHA256, SHA512, and MD5.</p><p>This enum is used to specify the hash algorithm when generating or verifying hashes. It allows for easy selection of the desired algorithm without needing to remember the exact string values.</p><h2 id="default" tabindex="-1">Default <a class="header-anchor" href="#default" aria-label="Permalink to &quot;Default&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SHA512</span></span></code></pre></div><h2 id="enumeration-members" tabindex="-1">Enumeration Members <a class="header-anchor" href="#enumeration-members" aria-label="Permalink to &quot;Enumeration Members&quot;">​</a></h2><h3 id="md5" tabindex="-1">MD5 <a class="header-anchor" href="#md5" aria-label="Permalink to &quot;MD5&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">MD5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;md5&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><hr><h3 id="sha1" tabindex="-1">SHA1 <a class="header-anchor" href="#sha1" aria-label="Permalink to &quot;SHA1&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SHA1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;sha1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><hr><h3 id="sha256" tabindex="-1">SHA256 <a class="header-anchor" href="#sha256" aria-label="Permalink to &quot;SHA256&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SHA256</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;sha256&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><hr><h3 id="sha512" tabindex="-1">SHA512 <a class="header-anchor" href="#sha512" aria-label="Permalink to &quot;SHA512&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">SHA512</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;sha512&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div>',17)]))}const k=s(h,[["render",n]]);export{c as __pageData,k as default};
